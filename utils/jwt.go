package utils

import (
	"time"

	"github.com/golang-jwt/jwt/v4" // –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JWT
)

// üîë –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ —Ç–æ–∫–µ–Ω–æ–≤ (–µ–≥–æ –ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤ ENV-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö!)
var jwtSecret = []byte("my_secret_key")

// GenerateJWT —Å–æ–∑–¥–∞—ë—Ç JWT-—Ç–æ–∫–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func GenerateJWT(username string) (string, error) {
	// üè∑ –û–ø—Ä–µ–¥–µ–ª—è–µ–º payload —Ç–æ–∫–µ–Ω–∞ (–¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –Ω–µ—Å—ë—Ç)
	claims := jwt.MapClaims{
		"username": username,                               // üë§ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–æ–∫–µ–Ω
		"exp":      time.Now().Add(time.Hour * 24).Unix(), // ‚è≥ –£–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ (24 —á–∞—Å–∞)
		"iat":      time.Now().Unix(),                     // ‚è± –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø—É—Å–∫–∞ —Ç–æ–∫–µ–Ω–∞
	}

	// üîê –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º HMAC-SHA256 –∏ –Ω–∞—à–∏–º–∏ claims
	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)

	// üñã –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
	return token.SignedString(jwtSecret)
}
